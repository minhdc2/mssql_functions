USE [RPDW_DEV]
GO

/****** Object:  StoredProcedure [dbo].[usp_create_RowPermission_View]    Script Date: 8/15/2022 11:42:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[usp_create_RowPermission_View](@SOURCE_TABLE VARCHAR(255))
AS
BEGIN
BEGIN TRY
	DECLARE @VIEW_NAME VARCHAR(255) = 'V_' + @SOURCE_TABLE
	IF OBJECT_ID(@VIEW_NAME) IS NOT NULL
	BEGIN
		EXEC('DROP VIEW ' + @VIEW_NAME)
	END
	
	DECLARE @DS_NAME VARCHAR(255) = (SELECT DISTINCT [DS_Name] FROM DM_TABLEAU_DS_ACCESS_CONTROL WHERE [Data_Source_Table] = @SOURCE_TABLE)

	DECLARE @DEPT_COL VARCHAR(255) = (SELECT COLUMN_NAME FROM INFORMATION_SCHEMA.COLUMNS WHERE TABLE_NAME = @SOURCE_TABLE AND COLUMN_NAME IN ('Department', 'School', 'Dept'))

	DECLARE @TABLEAU_USER_GROUP VARCHAR(MAX) = ''
	SELECT 
		@TABLEAU_USER_GROUP += ''''+ [Full_Permission_Dept] + '_Viewer'',' + ''''+ [Full_Permission_Dept] + '_Explorer'','
	FROM 
		DM_TABLEAU_DS_ACCESS_CONTROL
	WHERE 
		[Data_Source_Table] = @SOURCE_TABLE
		AND [Full_Permission_Dept] != 'AS'
	SET @TABLEAU_USER_GROUP = LEFT(@TABLEAU_USER_GROUP, LEN(@TABLEAU_USER_GROUP) - 1)

	DECLARE @SQL VARCHAR(MAX)
	SET @SQL = '
	CREATE VIEW [dbo].['+ @VIEW_NAME +']
	AS
		--School_Access
		SELECT tab.*, Tableau_User_Name
		  FROM '+ @SOURCE_TABLE +' tab /*change source table*/
		 INNER JOIN DM_TABLEAU_USER_LIST user_access
				 ON tab.['+ @DEPT_COL +'] = user_access.[Department]
		 WHERE user_access.ACTIVE = ''Y''
		UNION
		--Full Access
		SELECT tab.*, Tableau_User_Name
		  FROM '+ @SOURCE_TABLE +' tab /*change source table*/
		 INNER JOIN DM_TABLEAU_USER_LIST user_access
				 ON 1 = 1
		 INNER JOIN DM_TABLEAU_DS_ACCESS_CONTROL ds_access
				 ON user_access.Department = ds_access.Full_Permission_Dept
				 OR user_access.Tableau_User_Group IN ('+ @TABLEAU_USER_GROUP +')
		 WHERE DS_Name = '''+ @DS_NAME +''' /*change ds name*/
		   AND user_access.ACTIVE = ''Y''
	'
	EXEC(@SQL)
	PRINT @SQL
END TRY
BEGIN CATCH
	PRINT ERROR_MESSAGE()
END CATCH
END
GO


/****** Object:  UserDefinedFunction [dbo].[f_CHECK_DATA_TYPES_BW_SRC_AND_DST]    Script Date: 8/15/2022 11:42:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE FUNCTION [dbo].[f_CHECK_DATA_TYPES_BW_SRC_AND_DST](
	@DST_TABLE VARCHAR(255), 
	@SRC_TABLE VARCHAR(255)
	)
RETURNS VARCHAR(255)
AS
BEGIN
	DECLARE @NUMBER_OF_MATCHED_COLUMNS INT
	DECLARE @NUMBER_OF_CHECKED_COLUMNS INT

	SELECT @NUMBER_OF_MATCHED_COLUMNS = COUNT(DISTINCT DST.COLUMN_NAME) 
	FROM 
		RPDW_DEV..F_GET_COLUMNS_INFO_BASE(@DST_TABLE) AS DST
		INNER JOIN RPDW_DEV..F_GET_COLUMNS_INFO_BASE(@SRC_TABLE) AS SRC
		ON  DST.COLUMN_NAME = SRC.COLUMN_NAME
			AND DST.DATA_TYPE = SRC.DATA_TYPE
			AND ISNULL(DST.CHARACTER_MAXIMUM_LENGTH, 0.001) = ISNULL(SRC.CHARACTER_MAXIMUM_LENGTH, 0.001)
			AND ISNULL(DST.CHARACTER_OCTET_LENGTH, 0.001) = ISNULL(SRC.CHARACTER_OCTET_LENGTH, 0.001)
			AND ISNULL(DST.NUMERIC_PRECISION, 0.001) = ISNULL(SRC.NUMERIC_PRECISION, 0.001)
			AND ISNULL(DST.NUMERIC_PRECISION_RADIX, 0.001) = ISNULL(SRC.NUMERIC_PRECISION_RADIX, 0.001)
			AND ISNULL(DST.NUMERIC_SCALE, 0.001) = ISNULL(SRC.NUMERIC_SCALE, 0.001)
			AND ISNULL(DST.DATETIME_PRECISION, 0.001) = ISNULL(SRC.DATETIME_PRECISION, 0.001)
			AND ISNULL(DST.CHARACTER_SET_CATALOG, 0.001) = ISNULL(SRC.CHARACTER_SET_CATALOG, 0.001)
			AND ISNULL(DST.CHARACTER_SET_SCHEMA, 0.001) = ISNULL(SRC.CHARACTER_SET_SCHEMA, 0.001)
			AND ISNULL(DST.CHARACTER_SET_NAME, 0.001) = ISNULL(SRC.CHARACTER_SET_NAME, 0.001)
			AND ISNULL(DST.COLLATION_CATALOG, 0.001) = ISNULL(SRC.COLLATION_CATALOG, 0.001)
			AND ISNULL(DST.COLLATION_SCHEMA, 0.001) = ISNULL(SRC.COLLATION_SCHEMA, 0.001)
			AND ISNULL(DST.COLLATION_NAME, 0.001) = ISNULL(SRC.COLLATION_NAME, 0.001)
			AND ISNULL(DST.DOMAIN_CATALOG, 0.001) = ISNULL(SRC.DOMAIN_CATALOG, 0.001)
			AND ISNULL(DST.DOMAIN_SCHEMA, 0.001) = ISNULL(SRC.DOMAIN_SCHEMA, 0.001)
			AND ISNULL(DST.DOMAIN_NAME, 0.001) = ISNULL(SRC.DOMAIN_NAME, 0.001)

	SELECT @NUMBER_OF_CHECKED_COLUMNS = COUNT(DISTINCT DST.COLUMN_NAME)
	FROM 
		RPDW_DEV..F_GET_COLUMNS_INFO_BASE(@DST_TABLE) AS DST
		INNER JOIN RPDW_DEV..F_GET_COLUMNS_INFO_BASE(@SRC_TABLE) AS SRC
		ON  DST.COLUMN_NAME = SRC.COLUMN_NAME

	DECLARE @CHECK_RESULT VARCHAR(255)
	BEGIN
		IF @NUMBER_OF_MATCHED_COLUMNS = @NUMBER_OF_CHECKED_COLUMNS
			BEGIN
				SET @CHECK_RESULT = 'PASSED'
			END
		ELSE
			BEGIN
				SET @CHECK_RESULT = '[DATA TYPES] are conflicted between ' + @SRC_TABLE + ' AND ' + @DST_TABLE
			END
	END

	RETURN @CHECK_RESULT
END
GO
/****** Object:  UserDefinedFunction [dbo].[f_CHECK_MANDATORY_FIELDS_BW_SRC_AND_DST]    Script Date: 8/15/2022 11:42:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE FUNCTION [dbo].[f_CHECK_MANDATORY_FIELDS_BW_SRC_AND_DST](
	@DST_TABLE VARCHAR(255), 
	@SRC_TABLE VARCHAR(255)
	)
RETURNS VARCHAR(255)
AS
BEGIN
	DECLARE @NUMBER_OF_MATCHED_COLUMNS INT
	DECLARE @NUMBER_OF_CHECKED_COLUMNS INT

	SELECT @NUMBER_OF_MATCHED_COLUMNS = COUNT(DISTINCT DST.COLUMN_NAME) 
	FROM 
		RPDW_DEV..F_GET_COLUMNS_INFO_BASE(@DST_TABLE) AS DST
		INNER JOIN RPDW_DEV..F_GET_COLUMNS_INFO_BASE(@SRC_TABLE) AS SRC
		ON  DST.COLUMN_NAME = SRC.COLUMN_NAME
			AND DST.IS_NULLABLE = SRC.IS_NULLABLE
	WHERE
		SRC.IS_NULLABLE = 'NO'

	SELECT @NUMBER_OF_CHECKED_COLUMNS = COUNT(DISTINCT COLUMN_NAME)
	FROM 
		RPDW_DEV..F_GET_COLUMNS_INFO_BASE(@SRC_TABLE)
	WHERE
		IS_NULLABLE = 'NO'

	DECLARE @CHECK_RESULT VARCHAR(255)
	BEGIN
		IF @NUMBER_OF_MATCHED_COLUMNS = @NUMBER_OF_CHECKED_COLUMNS
			BEGIN
				SET @CHECK_RESULT = 'PASSED'
			END
		ELSE
			BEGIN
				SET @CHECK_RESULT = '[MANDATORY FIELDS] are conflicted between ' + @SRC_TABLE + ' AND ' + @DST_TABLE
			END
	END

	RETURN @CHECK_RESULT
END
GO
/****** Object:  UserDefinedFunction [dbo].[f_CHECK_PRIMARY_KEY_BW_SRC_AND_DST]    Script Date: 8/15/2022 11:42:29 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
CREATE FUNCTION [dbo].[f_CHECK_PRIMARY_KEY_BW_SRC_AND_DST](
	@DST_TABLE VARCHAR(255), 
	@SRC_TABLE VARCHAR(255)
	)
RETURNS VARCHAR(255)
AS
BEGIN
	DECLARE @NUMBER_OF_MATCHED_COLUMNS INT
	DECLARE @NUMBER_OF_CHECKED_COLUMNS INT

	SELECT @NUMBER_OF_MATCHED_COLUMNS = COUNT(DISTINCT DST.COLUMN_NAME) 
	FROM 
		RPDW_DEV..F_GET_COLUMNS_INFO_BASE(@DST_TABLE) AS DST
		INNER JOIN RPDW_DEV..F_GET_COLUMNS_INFO_BASE(@SRC_TABLE) AS SRC
		ON  DST.COLUMN_NAME = SRC.COLUMN_NAME
			AND DST.CONSTRAINT_TYPE = SRC.CONSTRAINT_TYPE
		WHERE
			SRC.CONSTRAINT_TYPE = 'PRIMARY KEY'

	SELECT @NUMBER_OF_CHECKED_COLUMNS = COUNT(DISTINCT COLUMN_NAME)
	FROM 
		RPDW_DEV..F_GET_COLUMNS_INFO_BASE(@SRC_TABLE)
	WHERE
		CONSTRAINT_TYPE = 'PRIMARY KEY'

	DECLARE @CHECK_RESULT VARCHAR(255)
	BEGIN
		IF @NUMBER_OF_MATCHED_COLUMNS = @NUMBER_OF_CHECKED_COLUMNS
			BEGIN
				SET @CHECK_RESULT = 'PASSED'
			END
		ELSE
			BEGIN
				SET @CHECK_RESULT = '[PRIMARY KEY] are conflicted between ' + @SRC_TABLE + ' AND ' + @DST_TABLE
			END
	END

	RETURN @CHECK_RESULT
END
GO
